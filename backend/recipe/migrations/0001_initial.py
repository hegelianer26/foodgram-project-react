# Generated by Django 4.0 on 2022-01-21 12:04

import colorfield.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0005_follow_prevent_self_follow'),
    ]

    operations = [
        migrations.CreateModel(
            name='Favorited',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Добавить в избранное',
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название.', max_length=200, verbose_name='Название')),
                ('measurement_unit', models.CharField(help_text='Единицы измерения', max_length=200, verbose_name='Единицы измерения')),
            ],
            options={
                'verbose_name': 'Ингридиент',
                'verbose_name_plural': 'Ингридиенты',
            },
        ),
        migrations.CreateModel(
            name='Ingridients_For_Recipe',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('amount', models.IntegerField(default=1, help_text='Количество', validators=[django.core.validators.MinValueValidator(1, 'Количество ингридинетов не может быть меньше 1')], verbose_name='Количество')),
            ],
            options={
                'verbose_name': 'Ингдидиент для рецепта',
                'verbose_name_plural': 'Ингдидиенты для рецепта',
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Ссылка на картинку на сайте.', upload_to='recipe/images/', verbose_name='Изображение')),
                ('name', models.CharField(help_text='Название.', max_length=150, unique=True, verbose_name='Название')),
                ('text', models.TextField(help_text='Описание.', verbose_name='Описание')),
                ('cooking_time', models.IntegerField(help_text='Время приготовления в минутах.', validators=[django.core.validators.MinValueValidator(1, 'Время приготовления не может быть меньше 1 мин')], verbose_name='Время приготовления')),
                ('is_favorited', models.BooleanField(default=False, verbose_name='В избранном')),
                ('in_shopping_cart', models.BooleanField(default=False, verbose_name='В списке покупок')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
            ],
            options={
                'verbose_name': 'Рецепт',
                'verbose_name_plural': 'Рецепты',
            },
        ),
        migrations.CreateModel(
            name='Shopping_Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Список покупок',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название.', max_length=200, unique=True, verbose_name='Название тега')),
                ('color', colorfield.fields.ColorField(default='#FFFFFF', help_text='Цвет в HEX', image_field=None, max_length=7, samples=None, unique=True, verbose_name='Цвет (HEX)')),
                ('slug', models.SlugField(help_text='Уникальный слаг', max_length=200, unique=True, verbose_name='Слаг')),
            ],
            options={
                'verbose_name': 'Тэг',
                'verbose_name_plural': 'Тэги',
                'ordering': ('slug',),
            },
        ),
        migrations.CreateModel(
            name='Tags_For_Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slugs', to='recipe.recipe', verbose_name='Рецепт')),
                ('tags', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slugs', to='recipe.tag', verbose_name='Тэги')),
            ],
            options={
                'verbose_name': 'Тэг для рецепта',
                'verbose_name_plural': 'Тэги для рецепта',
            },
        ),
        migrations.AddConstraint(
            model_name='tag',
            constraint=models.UniqueConstraint(fields=('slug',), name='unique_slug'),
        ),
        migrations.AddField(
            model_name='shopping_cart',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shopping_cart', to='recipe.recipe', verbose_name='Рецепт'),
        ),
        migrations.AddField(
            model_name='shopping_cart',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shopping_cart', to='users.customuser', verbose_name='Список покупок'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='author',
            field=models.ForeignKey(help_text='Автор публикации (пользователь)', on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to='users.customuser', verbose_name='Автор'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='ingredients',
            field=models.ManyToManyField(help_text='Список ингредиентов', related_name='ingredients', through='recipe.Ingridients_For_Recipe', to='recipe.Ingredient', verbose_name='Ингридиенты'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='tags',
            field=models.ManyToManyField(help_text='Список тэгов', through='recipe.Tags_For_Recipe', to='recipe.Tag', verbose_name='Тэги'),
        ),
        migrations.AddField(
            model_name='ingridients_for_recipe',
            name='ingredient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='amounts', to='recipe.ingredient', verbose_name='Игридиент'),
        ),
        migrations.AddField(
            model_name='ingridients_for_recipe',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='amounts', to='recipe.recipe', verbose_name='Рецепт'),
        ),
        migrations.AddField(
            model_name='favorited',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorited_by', to='recipe.recipe', verbose_name='Рецепт'),
        ),
        migrations.AddField(
            model_name='favorited',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_favorites', to='users.customuser', verbose_name='Пользователь'),
        ),
        migrations.AddConstraint(
            model_name='shopping_cart',
            constraint=models.UniqueConstraint(fields=('recipe', 'user'), name='unique_shopping_cart'),
        ),
        migrations.AddConstraint(
            model_name='ingridients_for_recipe',
            constraint=models.UniqueConstraint(fields=('recipe', 'ingredient'), name='unique_recipe'),
        ),
        migrations.AddConstraint(
            model_name='favorited',
            constraint=models.UniqueConstraint(fields=('user', 'recipe'), name='unique_favorited'),
        ),
    ]
